git:
  depth: 1

language: node_js

stages:
  - name: build cache
  - name: unit test and stack deployment
  - name: integration tests
  - name: redeployment integration tests
    if: (type != pull_request AND branch = master) OR commit_message =~ \[run-redeploy-tests\] OR (type != pull_request AND tag =~ ^v\d+)
  - name: cleanup integration tests
  - name: deploy
    if: type != pull_request AND tag =~ ^v\d+
  - name: deployment test setup
    if: type != pull_request AND tag =~ ^v\d+
  - name: deployment test
    if: type != pull_request AND tag =~ ^v\d+

jobs:
  include:
    - name: "Build npm cache"
      stage: build cache
      install: true
      script: ./travis-ci/build-cache.sh

    # - name: "eslint"
    #   stage: unit test and stack deployment
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - env SKIP_BUILD=true ./bin/prepare
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: npm run lint
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "Unit tests except API"
    #   stage: unit test and stack deployment
    #   services:
    #     - docker
    #   env:
    #     - LOCALSTACK_HOST=127.0.0.1
    #     - LOCAL_ES_HOST=127.0.0.1
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - ./travis-ci/start-local-services.sh
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: ./node_modules/.bin/nyc ./node_modules/.bin/lerna run test --ignore @cumulus/api
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "API unit tests"
    #   stage: unit test and stack deployment
    #   services:
    #     - docker
    #   env:
    #     - LOCALSTACK_HOST=127.0.0.1
    #     - LOCAL_ES_HOST=127.0.0.1
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - ./travis-ci/start-local-services.sh
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: ./travis-ci/run-api-unit-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "Deploy Integration Test Stack"
    #   stage: unit test and stack deployment
    #   if: commit_message !~ \[skip-integration-tests\] OR branch = master
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: ./travis-ci/travis_wait_new 50 ./travis-ci/init-integration-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "Run integration tests"
    #   stage: integration tests
    #   if: commit_message !~ \[skip-integration-tests\] OR branch = master
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: ./travis-ci/travis_wait_new 50 ./travis-ci/run-integration-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "Run redeployment integration tests"
    #   stage: redeployment integration tests
    #   if: commit_message !~ \[skip-integration-tests\] OR branch = master
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - ln -s /dev/stdout ./lerna-debug.log
    #     - npm run bootstrap-no-build
    #     - echo 'BOOTSTRAP FINISHED'
    #   script: ./travis-ci/travis_wait_new 50 ./travis-ci/run-redeployment-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    - name: "Cleanup integration tests"
      stage: cleanup integration tests
      if: commit_message !~ \[skip-integration-tests\] OR branch = master
      script: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh

    # - name: "Deploy to NPM"
    #   stage: deploy
    #   install:
    #     - ./travis-ci/fetch-cache.sh
    #     - npm install
    #     - npm run bootstrap-no-build
    #   script: ./travis-ci/deploy-to-npm.sh

    # - name: "Deploy to Github Pages"
    #   stage: deploy
    #   install: npm install
    #   script: ./travis-ci/deploy-to-github-pages.sh

    # - name: "Deploy packages to integration test stack"
    #   stage: deployment test setup
    #   install: true
    #   script: ./travis-ci/travis_wait_new 50 ./travis-ci/init-integration-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh
    #   env:
    #     - DEPLOYMENT=cumulus-from-npm
    #     - USE_NPM_PACKAGES=true

    # - name: "Run integration tests against deployed packages"
    #   stage: deployment test
    #   install: true
    #   script: ./travis-ci/travis_wait_new 50 ./travis-ci/run-integration-tests.sh
    #   after_success: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh
    #   after_failure: ./travis-ci/travis_wait_new 50 ./travis-ci/cleanup-integration-tests.sh
    #   env:
    #     - DEPLOYMENT=cumulus-from-npm
    #     - USE_NPM_PACKAGES=true

# branches:
#   only:
#     - master
