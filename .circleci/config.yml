version: 2

jobs:
  build_and_test:
    docker:
      - image: cumuluss/circleci:node-6.10
      - name: localstack
        image: localstack/localstack
    working_directory: ~/project
    steps:
      - checkout

      - restore_cache:
          keys:
            - core-{{ checksum "lerna.json" }}-{{ checksum "package.json" }}
            - core-

      - run:
          name: core installation
          command: |
            yarn install

            # generate global hash
            ./node_modules/.bin/lerna exec --concurrency 1 -- sha1sum package.json | awk '{print $1}' '' >> /home/circleci/project/global-hash

      - save_cache:
          paths:
            - ./node_modules
          key: core-{{ checksum "lerna.json" }}-{{ checksum "package.json" }}

      - restore_cache:
          keys:
            - packages-{{ checksum "global-hash" }}

      - restore_cache:
          keys:
            - cumulus-tasks-{{ checksum "global-hash" }}

      - run:
          name: Installing Dependencies
          command: |
            # start ftp
            sudo rm -rf /home/vsftpd
            sudo ln -s /home/circleci/project/packages/test-data /home/vsftpd
            sudo service vsftpd start || true

            # start http service
            sudo rm -rf /var/www/html
            sudo ln -s /home/circleci/project/packages/test-data /var/www/html
            sudo service apache2 start

            # start sftp service
            sudo bash /usr/sbin/sftp.sh user:password
            sudo cp -r /home/circleci/project/packages/test-data/* /home/user/

            yarn bootstrap-no-build

      - save_cache:
          key: packages-{{ checksum "global-hash" }}
          paths:
            - ./packages/deployment/node_modules
            - ./packages/pvl/node_modules
            - ./packages/test-data/node_modules
            - ./packages/api/node_modules
            - ./packages/common/node_modules
            - ./packages/cmrjs/node_modules
            - ./packages/ingest/node_modules
            - ./packages/integration-tests/node_modules
            - ./packages/task-debug/node_modules

      - save_cache:
          key: cumulus-tasks-{{ checksum "global-hash" }}
          paths:
            - ./tasks/hello-world/node_modules
            - ./tasks/discover-granules/node_modules
            - ./tasks/discover-pdrs/node_modules
            - ./tasks/parse-pdr/node_modules
            - ./tasks/post-to-cmr/node_modules
            - ./tasks/pdr-status-check/node_modules
            - ./tasks/queue-granules/node_modules
            - ./tasks/queue-pdrs/node_modules
            - ./tasks/sync-granule/node_modules
            - ./tasks/sf-sns-report/node_modules

      - run:
          name: Running Tests
          environment:
            LOCALSTACK_HOST: localstack
          command: yarn test

      - run:
          name: Running End to End Tests
          environment:
            LOCALSTACK_HOST: localstack
          command: yarn e2e

      - run:
          name: Running AWS Integration Tests
          command: |
            if [[ "$CIRCLE_BRANCH" =~ release-.* ]]; then
              sudo chown -R circleci:circleci /usr/local/bin

              # install cumulus-integration
              branch="${INTEGRATION_TEST_BRANCH:-master}"
              git clone -b ${branch} https://github.com/cumulus-nasa/cumulus-integration-tests.git ~/integration
              cd ~/integration
              yarn

              # extract list of cumulus packages used in the integration test
              cat package.json | jq '.dependencies | to_entries[] | select(.key | startswith("@cumulus")).key' > cumulus_integration_tests_packages.txt
              cd ~/project

              # run the build command on the packages used on the integration tests
              cat ../integration/cumulus_integration_tests_packages.txt | xargs -I % ./node_modules/.bin/lerna exec --scope % -- yarn build

              # run the yarn link on packages used on the integration tests
              cat ../integration/cumulus_integration_tests_packages.txt | xargs -I % ./node_modules/.bin/lerna exec --scope % -- yarn link
              cd ~/integration

              # run the yarn link package-name on the integration tests
              cat cumulus_integration_tests_packages.txt | xargs -I % yarn link %

              # deploy latest version of the packages to the aws
              yarn deploy

              # run the tests
              yarn test
            fi

      - run:
          name: Running eslint-ratchet
          command: ./bin/eslint-ratchet ci

  build_and_publish:
    docker:
      - image: circleci/node:6.10
    working_directory: ~/project
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: |
            # checkout the latest tag
            LATEST_GIT_TAG=$(git describe --tags --abbrev=0 --match v*)
            git checkout tags/$LATEST_GIT_TAG -b latest_git_tag
            yarn

      - run:
          name: Publishing to NPM
          command: |
            echo "//registry.npmjs.org/:_authToken=${NPM_TOKEN}" > ~/.npmrc
            VERSION=$(cat lerna.json | jq .version --raw-output)
            ./node_modules/.bin/lerna publish --skip-git --repo-version $VERSION --yes --force-publish=*


workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_and_test
      - build_and_publish:
          requires:
            - build_and_test
          filters:
            branches:
              only: release-version-1.3.0 
